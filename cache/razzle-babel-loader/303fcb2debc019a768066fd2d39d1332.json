{"ast":null,"code":"var _jsxFileName = \"/Users/vaughanstedman/development/kt-tac-ops-deck/src/components/tac-ops-card.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { insertShapes } from \"../utils/insert-shapes\";\nimport styles from \"./tac-ops-card.module.css\";\nvar cardInfo = {\n  title: \"UPLOAD VIRAL CODE\",\n  text: \"You can reveal this Tac Op in the Target Reveal step of any Turning Point.\",\n  points: [\"If a friendly operative performs the Upload Viral Code action, you score 1VP.\", \"If you achieve the first condition in any subsequent Turning Points, you score 1VP.\"],\n  actions: [{\n    title: \"UPLOAD VIRAL CODE\",\n    cost: \"2AP\",\n    text: \"An operative can perform this action while within --TRIANGLE-- of your opponent's drop zone and not within --PENTAGON-- of enemy operatives.\"\n  }]\n};\nexport function TacOpsCard(_ref) {\n  var _this = this;\n\n  var cardInfo = _ref.cardInfo;\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, cardInfo.title), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, cardInfo.text), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, cardInfo.points.map(function (point, i) {\n    return __jsx(\"li\", {\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, point);\n  })), cardInfo.actions.length > 0 && cardInfo.actions.map(function (action) {\n    return __jsx(React.Fragment, {\n      key: action.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, __jsx(\"h2\", {\n      className: styles.actionTitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }, action.title), __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }, action.cost)), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, insertShapes(action.text), \" \"));\n  }));\n}","map":{"version":3,"sources":["/Users/vaughanstedman/development/kt-tac-ops-deck/src/components/tac-ops-card.tsx"],"names":["React","insertShapes","styles","cardInfo","title","text","points","actions","cost","TacOpsCard","container","map","point","i","length","action","actionTitle"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,wBAA7B;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AAEA,IAAMC,QAAQ,GAAG;AACfC,EAAAA,KAAK,EAAE,mBADQ;AAEfC,EAAAA,IAAI,EAAE,4EAFS;AAGfC,EAAAA,MAAM,EAAE,CACN,+EADM,EAEN,qFAFM,CAHO;AAOfC,EAAAA,OAAO,EAAE,CACP;AACEH,IAAAA,KAAK,EAAE,mBADT;AAEEI,IAAAA,IAAI,EAAE,KAFR;AAGEH,IAAAA,IAAI,EAAE;AAHR,GADO;AAPM,CAAjB;AAkCA,OAAO,SAASI,UAAT,OAAwD;AAAA;;AAAA,MAAlCN,QAAkC,QAAlCA,QAAkC;AAC7D,SACE;AAAK,IAAA,SAAS,EAAED,MAAM,CAACQ,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAER,MAAM,CAACE,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BD,QAAQ,CAACC,KAAvC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,QAAQ,CAACE,IAAb,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QAAQ,CAACG,MAAT,CAAgBK,GAAhB,CAAoB,UAACC,KAAD,EAAQC,CAAR;AAAA,WACnB;AAAI,MAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAaD,KAAb,CADmB;AAAA,GAApB,CADH,CAHF,EAQGT,QAAQ,CAACI,OAAT,CAAiBO,MAAjB,GAA0B,CAA1B,IACCX,QAAQ,CAACI,OAAT,CAAiBI,GAAjB,CAAqB,UAACI,MAAD;AAAA,WACnB,MAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,GAAG,EAAEA,MAAM,CAACX,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAEF,MAAM,CAACc,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOD,MAAM,CAACX,KAAd,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOW,MAAM,CAACP,IAAd,CAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIP,YAAY,CAACc,MAAM,CAACV,IAAR,CAAhB,MALF,CADmB;AAAA,GAArB,CATJ,CADF;AAqBD","sourcesContent":["import React from \"react\";\nimport { insertShapes } from \"../utils/insert-shapes\";\nimport styles from \"./tac-ops-card.module.css\";\n\nconst cardInfo = {\n  title: \"UPLOAD VIRAL CODE\",\n  text: \"You can reveal this Tac Op in the Target Reveal step of any Turning Point.\",\n  points: [\n    \"If a friendly operative performs the Upload Viral Code action, you score 1VP.\",\n    \"If you achieve the first condition in any subsequent Turning Points, you score 1VP.\",\n  ],\n  actions: [\n    {\n      title: \"UPLOAD VIRAL CODE\",\n      cost: \"2AP\",\n      text: \"An operative can perform this action while within --TRIANGLE-- of your opponent's drop zone and not within --PENTAGON-- of enemy operatives.\",\n    },\n  ],\n};\n\ninterface TacOpsAction {\n  title: string;\n  pretext: string;\n  cost: string;\n  text: string;\n}\n\ninterface TacOpsCard {\n  title: string;\n  text: string;\n  points: string[];\n  actions?: TacOpsAction[];\n}\n\ninterface TacOpsCardProperties {\n  cardInfo: TacOpsCard;\n}\n\nexport function TacOpsCard({ cardInfo }: TacOpsCardProperties) {\n  return (\n    <div className={styles.container}>\n      <h2 className={styles.title}>{cardInfo.title}</h2>\n      <p>{cardInfo.text}</p>\n      <ul>\n        {cardInfo.points.map((point, i) => (\n          <li key={i}>{point}</li>\n        ))}\n      </ul>\n      {cardInfo.actions.length > 0 &&\n        cardInfo.actions.map((action) => (\n          <React.Fragment key={action.title}>\n            <h2 className={styles.actionTitle}>\n              <span>{action.title}</span>\n              <span>{action.cost}</span>\n            </h2>\n            <p>{insertShapes(action.text)} </p>\n          </React.Fragment>\n        ))}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}